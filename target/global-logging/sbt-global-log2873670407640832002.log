[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\lialq\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\lialq\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.11 (Amazon.com Inc. Java 17.0.12)
[debug] Load.defaultLoad until apply took 213.6004ms
[debug]           Load.loadUnit: plugins took 148.7437ms
[debug]           Load.loadUnit: defsScala took 0.9392ms
[debug] [Loading] Scanning directory C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel\project
[debug]             Load.loadUnit: mkEval took 14.5172ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 35.2431 ms
[info] loading settings for project matrix_multiplication_parallel-build from idea.sbt...
[debug]               Load.resolveProject(matrix_multiplication_parallel-build) took 128.7528ms
[debug]             Load.loadTransitive: finalizeProject(Project(id matrix_multiplication_parallel-build, base: C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel\project, plugins: List(<none>))) took 192.9021ms
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel\project, returning: (matrix_multiplication_parallel-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 717.0946ms
[debug]           Load.loadUnit: cleanEvalClasses took 17.4715ms
[debug]         Load.loadUnit(file:/C:/Users/lialq/IdeaProjects/matrix_multiplication_parallel/project/, ...) took 901.7009ms
[debug]       Load.apply: load took 1317.0687ms
[debug]       Load.apply: resolveProjects took 12.9762ms
[debug]       Load.apply: finalTransforms took 112.7337ms
[debug]       Load.apply: config.delegates took 10.7361ms
[debug]       Load.apply: Def.make(settings)... took 834.6166ms
[debug]       Load.apply: structureIndex took 177.1978ms
[debug]       Load.apply: mkStreams took 1.9116ms
[info] loading project definition from C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4555.7817ms
[debug]     Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel
[debug]       Load.loadUnit: mkEval took 0.4976ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.6593 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 75.6435ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel, plugins: List(<none>))) took 84.7891ms
[debug] [Loading] Done in C:\Users\lialq\IdeaProjects\matrix_multiplication_parallel, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 262.1951ms
[debug]     Load.loadUnit: cleanEvalClasses took 72.7227ms
[debug]   Load.loadUnit(file:/C:/Users/lialq/IdeaProjects/matrix_multiplication_parallel/, ...) took 4894.6449ms
[debug] Load.apply: load took 4950.1545ms
[debug] Load.apply: resolveProjects took 0.3031ms
[debug] Load.apply: finalTransforms took 128.303ms
[debug] Load.apply: config.delegates took 0.8952ms
[debug] Load.apply: Def.make(settings)... took 248.0554ms
[debug] Load.apply: structureIndex took 67.8629ms
[debug] Load.apply: mkStreams took 0.0044ms
[info] set current project to Taller Paralelismo de Tareas y Datos (in build file:/C:/Users/lialq/IdeaProjects/matrix_multiplication_parallel/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
